authelia:
  env:
    TZ: America/Los_Angeles

  # Authelia configuration
  domain: auth.toolstowelsandfroods.com
  authentication_backend:
    password_reset:
      disable: false
    refresh_interval: 1m
    ldap:
      implementation: custom
      url: ldap://lldap:3890
      timeout: 5s
      start_tls: false
      base_dn: dc=toolstowelsandfroods,dc=com
      username_attribute: uid
      additional_users_dn: ou=people
      # To allow sign in both with username and email, one can use a filter like
      # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
      users_filter: "(&({username_attribute}={input})(objectClass=person))"
      # Set this to ou=groups, because all groups are stored in this ou
      additional_groups_dn: ou=groups
      # Only this filter is supported right now
      groups_filter: "(member={dn})"
      # The attribute holding the name of the group.
      group_name_attribute: cn
      # Email attribute
      mail_attribute: mail
      # The attribute holding the display name of the user. This will be used to greet an authenticated user.
      display_name_attribute: displayName
      # The username and password of the admin user.
      # "admin" should be the admin username you set in the LLDAP configuration
      user: uid=admin,ou=people,dc=example,dc=com
      password:
        external:
          name: authelia-secrets
          key: bind_password

  jwt_secret:
    external:
      name: authelia-secrets
      key: jwt_secret

  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/enable: "true"
        hajimari.io/icon: lock
        hajimari.io/appName: Authelia
        hajimari.io/info: Authentication and authorization, MFA and SSO
      hosts:
        - host: &host auth.toolstowelsandfroods.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: authelia-tls-certificate
          hosts:
          - *host
  session:
    redis:
      enabled: true
      enabledSecret: false
      host: redis.redis.svc.cluster.local
      port: 6379
  resources:
    requests:
      cpu: 5m
      memory: 10Mi
    limits:
      memory: 200Mi
