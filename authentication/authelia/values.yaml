app-template:
  controller:
    annotations:
      reloader.stakater.com/auto: "true"
    type: statefulset
  image:
    repository: ghcr.io/authelia/authelia
    # TODO Switch to Authelia release tag on next release
    tag: master@sha256:cc12c2b96ea0af84782ca740ea30d45582c5d801be4633aefc8565ccb4172f87
  args: ["--config", "/etc/authelia/config.yaml"]
  env:
    TZ: America/Los_Angeles
  enableServiceLinks: false
  service:
    main:
      ports:
        http:
          port: &port 80
        metrics:
          enabled: true
          port: 8080
  probes:
    liveness: &probes
      enabled: true
      custom: true
      spec:
        httpGet:
          path: /api/health
          port: *port
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3
    readiness: *probes
    startup:
      enabled: false
  serviceMonitor:
    main:
      enabled: true
      endpoints:
        - port: metrics
          scheme: http
          path: /metrics
          interval: 1m
          scrapeTimeout: 10s
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/enable: "true"
        hajimari.io/icon: lock
        hajimari.io/appName: Authelia
        hajimari.io/info: Authentication and authorization, MFA and SSO
      hosts:
        - host: &host auth.toolstowelsandfroods.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: authelia-tls-certificate
          hosts:
          - *host
  domain: auth.toolstowelsandfroods.com
  authentication_backend:
    password_reset:
      disable: false
    refresh_interval: 1m
    ldap:
      implementation: custom
      url: ldap://lldap:3890
      timeout: 5s
      start_tls: false
      base_dn: dc=toolstowelsandfroods,dc=com
      username_attribute: uid
      additional_users_dn: ou=people
      # To allow sign in both with username and email, one can use a filter like
      # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
      users_filter: "(&({username_attribute}={input})(objectClass=person))"
      # Set this to ou=groups, because all groups are stored in this ou
      additional_groups_dn: ou=groups
      # Only this filter is supported right now
      groups_filter: "(member={dn})"
      # The attribute holding the name of the group.
      group_name_attribute: cn
      # Email attribute
      mail_attribute: mail
      # The attribute holding the display name of the user. This will be used to greet an authenticated user.
      display_name_attribute: displayName
      # The username and password of the admin user.
      # "admin" should be the admin username you set in the LLDAP configuration
      user: uid=admin,ou=people,dc=example,dc=com
      password:
        external:
          name: authelia-secrets
          key: bind_password

  jwt_secret:
    external:
      name: authelia-secrets
      key: jwt_secret
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: "OnRootMismatch"
  persistence:
    config:
      enabled: true
      type: configMap
      name: authelia-config
      subPath: config.yaml
      mountPath: /etc/authelia/config.yaml
      readOnly: false
    db:
      enabled: true
      existingClaim: authelia
  resources:
    requests:
      cpu: 10m
      memory: 250Mi
    limits:
      memory: 1000Mi
