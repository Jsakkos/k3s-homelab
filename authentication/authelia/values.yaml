authelia:
  domain: toolstowelsandfroods.com
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/enable: "true"
        hajimari.io/icon: lock
        hajimari.io/appName: Authelia
        hajimari.io/info: Authentication and authorization, MFA and SSO
        nginx.ingress.kubernetes.io/auth-method: GET
        nginx.ingress.kubernetes.io/auth-url: http://authelia.authelia.svc.cluster.local/api/verify
        nginx.ingress.kubernetes.io/auth-signin: https://auth.example.com?rm=$request_method
        nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Method $request_method;
      hosts:
        - host: &host auth.toolstowelsandfroods.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: authelia-tls-certificate
          hosts:
          - *host
  env:
  - name: TZ
    value: America/Los_Angeles
  resources:
    requests:
      cpu: "0.25"
      memory: 50Mi
    limits:
      cpu: "4.00"
      memory: 120Mi

  configMap:

    default_2fa_method: totp
    storage:
      local:
        path: /db/db.sqlite3
    authentication_backend:
      password_reset:
        disable: true
      ldap:
        implementation: custom
        url: ldap://lldap.lldap.svc.cluster.local:3890
        base_dn: DC=toolstowelsandfroods,DC=home,DC=com
        users_filter: (&({username_attribute}={input})(objectClass=posixAccount))
        username_attribute: uid
        mail_attribute: mail
        display_name_attribute: givenName
        groups_filter: (&(memberUid={username})(objectClass=posixGroup))
        group_name_attribute: cn
        user: admin
    access_control:
      default_policy: one_factor
      networks:
        - name: internal
          networks: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
    session:
      redis:
        host: redis.redis.svc.cluster.local
        port: 26379
    storage:
      local:
        enabled: true
      postgres:
        enabled: false
  secret:
    vaultInjector:
      enabled: true

      secrets:
        jwt:
          Annotation: vault.hashicorp.com/agent-inject-secret-jwt
        ldap:
          Annotation: vault.hashicorp.com/agent-inject-secret-ldap
        storage:
          Annotation: vault.hashicorp.com/agent-inject-secret-storage
        storageEncryptionKey:
          Annotation: vault.hashicorp.com/agent-inject-secret-storage-encryption-key
        session:
          Annotation: vault.hashicorp.com/agent-inject-secret-session
